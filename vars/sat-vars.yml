---

# Set to False if using self-signed certs on satellite
validate_certs: True

# Set to True if you want to execute hammer commands on the Ansible host
# rather than on the satellite
hammer_local: False

# Set to False if you want to execute foreman-ansible-modules on the 
# satellite rather than the Ansible host 
fam_local: True


# specify what ports that should be open in the local firewall
open_ports:
- 53/tcp
- 53/udp
- 67/udp
- 69/udp
- 80/tcp
- 443/tcp
- 5000/tcp
- 5647/tcp
- 8000/tcp
- 8140/tcp
- 9090/tcp

server_url: "https://{{ ansible_nodename }}"

# specify the name of your organization
# if you need to have more than one organization in your satellite,
# create a separate variable file for each organization
organization: "Ture"

# specify a list of the locations that will be created
locations:
- "Copenhagen"

# specify username and password of the initial admin user
username: admin
password: redhat123

# specify where the manifest file is located
manifest: "files/manifest.zip"

# specify a list of domains that will be created
domains:
- "example.com"

# specify if a proxy is needed to access external resources, e.g. cdn.redhat.com
# http_proxy: "http://http_proxy:8080"

# speficy a list of lifecycle environments
# each environment needs to have a name and the name of the previous enviornment
lifecycle_environments:
- prior: Library
  name: DEV

- prior: DEV
  name: TEST

- prior: TEST
  name: PROD

# specify which Red Hat repositories that should be enabled
redhat_products:

- name: Red Hat Enterprise Linux Server
  
  repositories:
  
  - name: Red Hat Enterprise Linux 7 Server (RPMs)
    basearch: x86_64
    releasever: 7Server

  - name: Red Hat Enterprise Linux 7 Server (Kickstart) 
    basearch: x86_64
    releasever: "7.7"

#  - name: Red Hat Satellite Tools 6.6 (for RHEL 7 Server) (RPMs)
#    basearch: x86_64

#  - name: Red Hat Enterprise Linux 7 Server - Optional (RPMs)
#    basearch: x86_64
#    releasever: 7Server

#  - name: Red Hat Enterprise Linux 7 Server - Extras (RPMs)
#    basearch: x86_64

#  - name: Red Hat Enterprise Linux 7 Server - Supplementary (RPMs)
#    basearch: x86_64
#    releasever: 7Server

#  - name: Red Hat Enterprise Linux 7 Server - RH Common (RPMs)
#    basearch: x86_64
#    releasever: 7Server

- name: Red Hat Enterprise Linux for x86_64

  repositories:

  - name: Red Hat Enterprise Linux 8 for x86_64 - BaseOS (RPMs)
    releasever: 8

  - name: Red Hat Enterprise Linux 8 for x86_64 - AppStream (RPMs)
    releasever: 8

  - name: Red Hat Enterprise Linux 8 for x86_64 - BaseOS (Kickstart)
    releasever: 8.0

  - name: Red Hat Enterprise Linux 8 for x86_64 - AppStream (Kickstart)
    releasever: 8.0


#- name: Red Hat Software Collections (for RHEL Server)
#  
#  repositories:
#
#  - name: Red Hat Software Collections RPMs for Red Hat Enterprise Linux 7 Server
#    basearch: x86_64
#    releasever: 7Server


#- name: Red Hat Ansible Engine
#
#  repositories:
#  
#  - name: Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server
#    basearch: x86_64

# specify a list of third party products that should be created
# each product contains a list of repositories
# each repository needs to specify a name, a url to the upstream
# repository and a url to the corresponding GPG key and a content type
custom_products:

- name: Extra Packages For Enterprise Linux

  repositories:

  - name: EPEL-7
    url: http://dl.fedoraproject.org/pub/epel/7Server/x86_64/
    gpg_key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    content_type: yum

# set download policy to either on_demand or immediate on all repositories
# immediate is generally recommended for production usage, but on_demand is useful in test environments
download_policy: on_demand

# specify the name of a sync plan and the interval that it should run on
sync_plan_name: nightly
sync_plan_interval: daily

# specify a list of content views that should be created 
# each content view requires a name, a list of repositories,
# a list of filters and a list of puppet modules.
# the lists can be empty by setting e.g. "filters: []"
content_views:

- name: CV-RHEL7

  repositories:

  - name: Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server
    product: Red Hat Enterprise Linux Server 

#  - name: Red Hat Satellite Tools 6.4 for RHEL 7 Server RPMs x86_64
#    product: Red Hat Enterprise Linux Server
#
#  - name: Red Hat Enterprise Linux 7 Server - Extras RPMs x86_64
#    product: Red Hat Enterprise Linux Server
#
#  - name: Red Hat Enterprise Linux 7 Server - Optional RPMs x86_64 7Server
#    product: Red Hat Enterprise Linux Server
#
#  - name: Red Hat Enterprise Linux 7 Server - RH Common RPMs x86_64 7Server 
#    product: Red Hat Enterprise Linux Server
#
#  - name: Red Hat Enterprise Linux 7 Server - Supplementary RPMs x86_64 7Server
#    product: Red Hat Enterprise Linux Server
#
  - name: Red Hat Enterprise Linux 7 Server Kickstart x86_64 7.7
    product: Red Hat Enterprise Linux Server
#
#  - name: Red Hat Software Collections RPMs for Red Hat Enterprise Linux 7 Server x86_64 7Server
#    product: Red Hat Software Collections (for RHEL Server)
#
#  - name: Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server x86_64
#    product: Red Hat Ansible Engine

  - name: EPEL-7
    product: Extra Packages For Enterprise Linux

  filters:

  - name: Include jq
    type: rpm
    inclusion: true
    product: Extra Packages For Enterprise Linux
    repositories: EPEL-7
    packages: 
    - jq
    - oniguruma

- name: CV-RHEL8

  repositories:

  - name: Red Hat Enterprise Linux 8 for x86_64 - BaseOS RPMs 8
    product: Red Hat Enterprise Linux for x86_64 

  - name: Red Hat Enterprise Linux 8 for x86_64 - AppStream RPMs 8 
    product: Red Hat Enterprise Linux for x86_64 

  - name: Red Hat Enterprise Linux 8 for x86_64 - BaseOS Kickstart 8.0
    product: Red Hat Enterprise Linux for x86_64 

  - name: Red Hat Enterprise Linux 8 for x86_64 - AppStream Kickstart 8.0
    product: Red Hat Enterprise Linux for x86_64 

  filters: []

# specify a list of content views that should be created
# subscription names can be found under Content -> Subscriptions
activation_keys:

- name: AK-DEV-RHEL7
  lifecycle_environment: DEV
  content_view: CV-RHEL7
  release_version: 7Server
  subscriptions:
  - name: Red Hat Enterprise Linux
  - name: Extra Packages For Enterprise Linux

- name: AK-TEST-RHEL7
  lifecycle_environment: TEST
  content_view: CV-RHEL7
  release_version: 7Server
  subscriptions:
  - name: Red Hat Enterprise Linux 
  - name: Extra Packages For Enterprise Linux

- name: AK-PROD-RHEL7
  lifecycle_environment: PROD
  content_view: CV-RHEL7
  release_version: 7Server
  subscriptions:
  - name: Red Hat Enterprise Linux 
  - name: Extra Packages For Enterprise Linux

- name: AK-DEV-RHEL8
  lifecycle_environment: DEV
  content_view: CV-RHEL8
  release_version: 8
  subscriptions:
  - name: Red Hat Enterprise Linux  

- name: AK-TEST-RHEL8
  lifecycle_environment: TEST
  content_view: CV-RHEL8
  release_version: 8
  subscriptions:
  - name: Red Hat Enterprise Linux

- name: AK-PROD-RHEL8
  lifecycle_environment: PROD
  content_view: CV-RHEL8
  release_version: 8
  subscriptions:
  - name: Red Hat Enterprise Linux


# specify a list of host groups that should be created.
# all parameters can be omitted except name.
# each parameter that is not set is inherited from the parent host group.
# the following parameters are available:
# name (required)
# architecture
# compute_profile
# compute_resource
# config_groups
# content_source
# content_view
# description
# domain
# environment
# lifecycle_environment
# locations
# medium
# openscap_proxy
# operatingsystem
# parameters (list, see activation key example below)
# parent
# ptable
# puppet_ca_proxy
# puppet_proxy
# pxe_loader
# realm
# root_pass
# subnet
# subnet6

host_groups:

- name: DEV
  architecture: x86_64
  lifecycle_environment: DEV
  content_source: sat6.example.com
  compute_resource: Libvirt
  domain: example.com

- name: TEST
  architecture: x86_64
  lifecycle_environment: TEST
  content_source: sat6.example.com
  compute_resource: Libvirt
  domain: example.com

- name: PROD
  architecture: x86_64
  lifecycle_environment: PROD
  content_source: sat6.example.com
  compute_resource: Libvirt
  domain: example.com

- parent: DEV
  name: RHEL7
  content_view: CV-RHEL7
  operatingsystem: RedHat 7.7
  ptable: Kickstart default
  pxe_loader: PXELinux BIOS
  parameters:
  - name: kt_activation_keys
    value: AK-DEV-RHEL7

- parent: TEST
  name: RHEL7
  content_view: CV-RHEL7
  operatingsystem: RedHat 7.7
  ptable: Kickstart default
  pxe_loader: PXELinux BIOS
  parameters:
  - name: kt_activation_keys
    value: AK-TEST-RHEL7

- parent: PROD
  name: RHEL7
  content_view: CV-RHEL7
  operatingsystem: RedHat 7.7
  parameters:
  - name: kt_activation_keys
    value: AK-PROD-RHEL7

- parent: DEV
  name: RHEL8
  content_view: CV-RHEL8
  operatingsystem: RedHat 8.0
  ptable: Kickstart default
  pxe_loader: PXELinux BIOS
  parameters:
  - name: kt_activation_keys
    value: AK-DEV-RHEL8

- parent: TEST
  name: RHEL8
  content_view: CV-RHEL8
  operatingsystem: RedHat 8.0
  ptable: Kickstart default
  pxe_loader: PXELinux BIOS
  parameters:
  - name: kt_activation_keys
    value: AK-TEST-RHEL8

- parent: PROD
  name: RHEL8
  content_view: CV-RHEL8
  operatingsystem: RedHat 8.0
  parameters:
  - name: kt_activation_keys
    value: AK-PROD-RHEL8

# specify a list of compute resources that should be created
compute_resources:
- name: VMware
  provider: Vmware
  url: vcenter.example.com
  datacenter: DC1
  username: username
  password: password

# specify a list of subnets that should be created.
# name, network and mask are required, rest of the fields can be omitted.
subnets:

- name: default 
  network: 192.168.122.0
  mask: 255.255.255.0
  gateway: 192.168.122.1
  mtu: 1500
  network_type: IPv4
  vlanid: 1
  boot_mode: DHCP
  ipam: DHCP
  from_ip: 192.168.122.50
  to_ip: 192.168.122.100
  dns_primary: 192.168.122.10
  dns_secondary: 4.4.4.4
  dhcp_proxy: "{{ ansible_nodename }}"
  discovery_proxy: "{{ ansible_nodename }}"
  dns_proxy: "{{ ansible_nodename }}"
  remote_execution_proxies: "{{ ansible_nodename }}"
  tftp_proxy: "{{ ansible_nodename }}"


# specify a list of settings that should be changed in the satellite
# each setting need to be specified by name (label) and value
settings:

- name: use_shortname_for_vms
  value: Yes

# if the sat6-template-sync role is used, specify these variables
template_sync_prefix: "Synced from git - "
template_sync_repo: https://gitlab.example.com/sat6-templates.git

# specify a list of custom user roles that should be created with
# their corresponding permissions.
# the permissions have to be divided into different resources,
# e.g. content views, lifecycle environments and products as in
# the Manage Content Views role below.
user_roles:

- name: Import Templates
  permissions:
  - import_templates

- name: Manage Content Views
  permissions:
  - view_content_views,publish_content_views,promote_or_remove_content_views
  - view_lifecycle_environments,promote_or_remove_content_views_to_environments
  - view_products

# specify a list of users that should be added to the satellite
# password can either be specified with the password in clear text
# or a random password can be generated as in the examples below
users:

- username: svc-template-importer
  password: clear-text-password
  mail: dev@null.no
  auth_source: Internal
  roles:
  - Import Templates

- username: svc-cv-manager
  password: "{{ lookup('password', '/root/svc-cv-manager length=32') }}" # generated password
  mail: dev@null.no
  auth_source: Internal
  roles:
  - Manage Content Views

