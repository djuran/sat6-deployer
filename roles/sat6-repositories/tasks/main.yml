---

- name: ensure Red Hat repositories are enabled
  katello_repository_set:
    username: "{{ username }}"
    password: "{{ password }}"
    server_url: "{{ server_url }}"
    organization: "{{ organization }}"
    product: "{{ item.0.name }}"
    name: "{{ item.1.name }}"
    state: enabled
    validate_certs: "{{ validate_certs }}"
    repositories:
    - basearch: "{{ item.1.basearch | default(omit) }}"
      releasever: "{{ item.1.releasever | default(omit) }}"
  with_subelements:
  - "{{ redhat_products }}"
  - repositories
  delegate_to: "{{ 'localhost' if fam_local else omit }}"

- name: ensure custom products exist
  katello_product:
    username: "{{ username }}"
    password: "{{ password }}"
    server_url: "{{ server_url }}"
    organization: "{{ organization }}"
    name: "{{ item.name }}"
    validate_certs: "{{ validate_certs }}"
  loop: "{{ custom_products }}"
  delegate_to: "{{ 'localhost' if fam_local else omit }}"

- name: ensure directory for GPG keys exist
  file:
    path: '/tmp/gpg-keys'
    state: directory
  delegate_to: "{{ 'localhost' if fam_local else omit }}"

- name: ensure GPG keys are present
  get_url:
    url: "{{ item.1.gpg_key }}"
    dest: "/tmp/gpg-keys/{{ item.1.gpg_key.split('/')[-1] }}"
  with_subelements:
  - "{{ custom_products }}"
  - repositories
  delegate_to: "{{ 'localhost' if fam_local else omit }}"

- name: ensure GPG keys exist
  katello_content_credential:
    username: "{{ username }}"
    password: "{{ password }}"
    server_url: "{{ server_url }}"
    organization: "{{ organization }}"
    name: "{{ item.path }}"
    content_type: gpg_key
    content: "{{ lookup('file', '/tmp/gpg-keys/{{ item.path }}') }}"
    validate_certs: "{{ validate_certs }}"
  with_filetree: /tmp/gpg-keys/
  delegate_to: "{{ 'localhost' if fam_local else omit }}"

# TODO: ensure global proxy setting is honored

- name: ensure custom repositories exist
  katello_repository:
    username: "{{ username }}"
    password: "{{ password }}"
    server_url: "{{ server_url }}"
    organization: "{{ organization }}"
    product: "{{ item.0.name }}"
    name: "{{ item.1.name }}"
    content_type: "{{ item.1.content_type }}"
    url: "{{ item.1.url }}"
    download_policy: "{{ download_policy }}"
    gpg_key: "{{ item.1.gpg_key.split('/')[-1] | default(omit) }}"
    validate_certs: "{{ validate_certs }}"
  with_subelements:
  - "{{ custom_products }}"
  - repositories
  delegate_to: "{{ 'localhost' if fam_local else omit }}"

